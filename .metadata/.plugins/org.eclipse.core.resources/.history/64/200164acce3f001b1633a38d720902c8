package multiThreading;

public class MultiThreadingUsingLamdaExpressions {

	public static void main(String[] args) {
		// Anonymous Class
		Runnable obj1 = new Runnable() {
			public void run() {
				for(int i = 1; i <= 5; i++) {
					System.out.println("Hi");
					try { 
						Thread.sleep(1000); // Suspend the Thread in milliseconds 
					} catch (Exception e) {}
				}
			}
		};
		
		// Lambda Expression
		Runnable obj2 = () -> ()  {
				for(int i = 1; i <= 5; i++) {
					System.out.println("Hello");
					try { 
						Thread.sleep(1000); // Suspend the Thread in milliseconds 
					} catch (Exception e) {}
				}
			};
	}

}

// We can use Lambda Expressions on FunctionalInterfaces
